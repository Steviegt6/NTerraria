--- src/decompiled/Terraria/GameContent/UI/Elements/UICharacter.cs
+++ src/NTerraria/Terraria/GameContent/UI/Elements/UICharacter.cs
@@ -1,6 +_,9 @@
 using Microsoft.Xna.Framework;
 using Microsoft.Xna.Framework.Graphics;
 using ReLogic.Content;
+using Terraria.NTerraria.Core;
+using Terraria.NTerraria.Core.Extensions;
+using Terraria.NTerraria.Core.IDs;
 using Terraria.UI;
 
 namespace Terraria.GameContent.UI.Elements
@@ -54,10 +_,12 @@
 
 		protected override void DrawSelf(SpriteBatch spriteBatch) {
 			CalculatedStyle dimensions = GetDimensions();
-			if (_drawsBackPanel)
+			if (_drawsBackPanel && NTCore.WorldGameMode == GameModeType.Action)
 				spriteBatch.Draw(_texture.Value, dimensions.Position(), Color.White);
+            else
+			    DrawClassIcons(spriteBatch, dimensions);
 
-			UpdateAnim();
+            UpdateAnim();
 			Vector2 value = dimensions.Position() + new Vector2(dimensions.Width * 0.5f - (float)(_player.width >> 1), dimensions.Height * 0.5f - (float)(_player.height >> 1));
 			Item item = _player.inventory[_player.selectedItem];
 			_player.inventory[_player.selectedItem] = _blankItem;
@@ -68,5 +_,30 @@
 		public void SetAnimated(bool animated) {
 			_animated = animated;
 		}
+
+		/// <summary>
+		/// Draws the player's class icons on the <see cref="UICharacter"/> element.
+		/// </summary>
+		/// <param name="spriteBatch">The <see cref="SpriteBatch"/> instance to use.</param>
+        /// <param name="dimensions">The dimensions of the <see cref="UICharacter"/> element.</param>
+		private void DrawClassIcons(SpriteBatch spriteBatch, CalculatedStyle dimensions)
+        {
+            Rectangle destRect = new Rectangle((int)dimensions.X, (int)dimensions.Y, 58, 59);
+            spriteBatch.Draw(NTTextureAssets.ClassIcons.Value, destRect, _player.GetGMPlayerData().Class.Rank.GetRankRectangle(), Color.White);
+		}
+
+		/// <summary>
+		/// Draws the player's level in accordance to some calculations on the <see cref="UICharacter"/> element.
+		/// </summary>
+        /// <param name="spriteBatch">The <see cref="SpriteBatch"/> instance to use.</param>
+        /// <param name="dimensions">The dimensions of the <see cref="UICharacter"/> element.</param>
+		private void DrawStats(SpriteBatch spriteBatch, CalculatedStyle dimensions)
+        {
+            string lvl = _player.GetGMPlayerData().Level.ToString();
+            float posX = dimensions.X + (58f - FontAssets.MouseText.Value.MeasureString(lvl).X);
+
+            Utils.DrawBorderStringFourWay(spriteBatch, FontAssets.MouseText.Value, lvl, posX, dimensions.Y + 59f - 22f,
+                _player.GetGMPlayerData().ProcessLevelAsColor(), Color.Black, Vector2.Zero);
+        }
 	}
 }
